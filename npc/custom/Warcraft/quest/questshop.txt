//===== rAthena Script =======================================
//= Euphy's Quest Shop
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.6b
//===== Compatible With: =====================================
//= rAthena SVN r16862+
//===== Description: =========================================
//= A dynamic quest shop based on Lunar's, with easier config.
//= Includes support for multiple shops & cashpoints.
//= Item Preview script by ToastOfDoom.
//===== Additional Comments: =================================
//= 1.0 Initial script.
//= 1.2 Added category support.
//= 1.3 More options and fixes.
//= 1.4 Added debug settings.
//= 1.5 Replaced categories with shop IDs.
//= 1.6 Added support for purchasing stackables.
//= 1.6a Added support for previewing costumes and robes.
//= 1.6b Added 'disable_items' command.
//============================================================

// Shop NPCs -- supplying no argument displays entire menu.
//	callfunc "qshop"{,<shop ID>{,<shop ID>{,...}}};
// 4_F_VALKYRIE 4_F_BRZ_WOMAN
//============================================================
prt_in,38,105,7	script	Secret Shop#1	4_F_VALKYRIE,{ 
	callfunc "qshop";
//OnInit:
//	waitingroom "Quest Shop",0;
//	end;
 }

// Script Core
//============================================================
-	script	quest_shop	FAKE_NPC,{ 
function Add; function Chk; function Slot; function A_An;
OnInit:
	freeloop(1);
	

// -----------------------------------------------------------
//  Basic shop settings.
// -----------------------------------------------------------

	set .Announce,1;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,1;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .ShowID,1;  	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,0;	// Show Zeny cost, if any? (1: yes / 0: no)
	set .MaxStack,100;	// Max number of quest items purchased at one time.

// -----------------------------------------------------------
//  Points variable -- optional quest requirement.
//	setarray .Points$[0],"<variable name>","<display name>";
// -----------------------------------------------------------

	setarray .Points$[0],"#CASHPOINTS","Cash Points";

// -----------------------------------------------------------
//  Shop IDs -- to add shops, copy dummy data at bottom of file.
//	setarray .Shops$[1],"<Shop 1>","<Shop 2>"{,...};
// -----------------------------------------------------------

	setarray .Shops$[1],"Wings","Headgears","Mid Gears","Weapons","Accessory","Fusion Valkyrie";

// -----------------------------------------------------------
//  Quest items -- do NOT use a reward item more than once!
//	Add(<shop ID>,<reward ID>,<reward amount>,
//	    <Zeny cost>,<point cost>,
//	    <required item ID>,<required item amount>{,...});
// -----------------------------------------------------------

	Add(1,20003,1,0,0,7214,200,7063,200,7067,200,20030,2);//Gargoyle 
	Add(1,20001,1,0,0,994,80,954,80,7006,80,20030,2);//Phoenix
	Add(1,20004,1,0,0,995,250,749,250,7066,200,969,200);//Artic
	Add(1,20002,1,0,0,1036,100,923,100,1030,30,969,150);//Demon Wing
	Add(1,20011,1,0,0,7168,100,7053,50,7063,20,982,10,996,5,1007,1,4054,1,969,50);//White ButtefflyW
	Add(1,20012,1,0,0,7168,100,1058,75,7053,50,7063,20,983,10,996,5,1007,1,4174,1,969,50);//Black BW
	Add(1,20013,1,0,0,7101,100,924,150,992,150,7053,100,969,100);//Torn Wing
	Add(1,20014,1,0,0,1036,1000,7451,20,983,10,969,300);//Dragon Wing
	Add(1,30027,1,0,0,1038,200,1039,200,983,2,20030,1);//Arch Demon
	Add(1,30030,1,0,0,4174,1,2255,2,983,2,20030,1);////Deviling
	Add(1,30028,1,0,0,4054,1,2254,2,982,2,20030,1);////Angeling
	Add(1,20015,1,0,0,4054,1,4174,1,30030,1,30028,1,1233,4,1527,4);////HNH
	Add(1,20005,1,0,0,1058,500,20012,1,20011,1,982,10,20030,50);////ICARUS WING
	Add(1,20056,1,100000000,0,20002,1,2255,3,507,300,7006,200,7289,10,7293,10,7296,10,2700,5);////DEVIL

	Add(2,5805,1,300000000,0,20001,1,20016,1,7562,20,7109,5,1029,10,4372,5,4419,5,4142,5,4302,10); // CORONET
	Add(2,30226,1,0,0,1059,100,7097,100,1030,20,7020,10); // Hokage
	//HOKAGE RECOLOR
	Add(2,30220,1,50000000,0,928,150,943,150,967,150,7169,20,4064,20,7297,10,4236,5,4137,5);//THYKAGE
	Add(2,30221,1,50000000,0,1059,300,1002,300,1030,20,7293,10,4168,5,4132,5);//TSUCHIKAGE
	Add(2,30222,1,50000000,0,1059,300,7053,250,7036,20,7562,10,4147,5,4372,5);//MIZUKAGE
	Add(2,30224,1,50000000,0,991,250,929,150,7154,150,7020,20,4341,20,7292,10,4121,5,4146,5);//RAIKAGE
	Add(2,30225,1,50000000,0,993,350,1059,150,7111,50,7109,10,7451,10,7290,10,4148,5,4276,5);//KAZEKAGE
	Add(2,5138,1,0,0,1020,300,1034,300,969,100,20030,1); //Magic Eyes
	Add(2,5137,1,0,0,1064,150,7047,200,969,100,20030,1);//alice Doll
	Add(2,20050,1,500000000,0,7086,2,7077,2,7088,2,7079,2,7295,100,7291,100);//Creed
	Add(2,20026,1,500000000,0,7078,1,7080,1,7082,1,7081,1);//Kakashi
	Add(2,20028,1,600000000,0,7086,3,7562,50,4148,10);//BALCKHELM
//	Add(2,20022,1,0,0,7090,8,20030,20);//Baphomet
	Add(2,20027,1,200000000,0,7079,2,7084,2,7083,2);//Travelers
	Add(2,30270,1,100000000,0,2256,5,12118,50);//FHP
	Add(2,20016,1,100000000,0,2256,5,12120,50);//EHP
	Add(2,20020,1,100000000,0,2256,5,12121,50);//WindHP
	Add(2,20018,1,100000000,0,2256,5,4039,25,4057,25);//SHP
	Add(2,20019,1,100000000,0,2256,5,12119,25,12120,25);//WaterHP
	Add(2,20017,1,100000000,0,2256,5,12085,10);//LHP
	
//	Add(2,20051,1,0,0,20022,1,7090,3,20030,100);//UPG BAPHO
//	Add(2,20052,1,0,0,2289,5,7086,1,20030,50);////POPOO
//	Add(2,20053,1,0,0,20027,1,7091,3,20030,100);//TRAVEL
	
	Add(3,30250,1,50000000,0,938,50,909,50,4147,5);//AWE
	Add(3,30251,1,50000000,0,938,50,909,50,4144,5);//EWE
	Add(3,30252,1,50000000,0,938,50,909,50,4132,5);//Blush
	Add(3,30253,1,50000000,0,938,50,909,50,4143,5);//Blink
	Add(3,30254,1,50000000,0,938,50,909,50,4137,5);//Dark B
	Add(3,30255,1,50000000,0,938,50,909,50,4123,5);//ELVen
	Add(3,30256,1,50000000,0,938,50,909,50,4134,5);//Masq
	Add(3,30257,1,100000000,0,7439,50,1059,200,4121,15,7018,20);//RE
	Add(3,30258,1,300000000,0,4121,10,4198,10,976,5,7063,500,7101,300,30250,1);//AS
//	Add(3,30175,1,0,0,20004,1,4330,5,20030,200);//Rinnegan
//	Add(3,30176,1,0,0,20002,5,20030,300);//Sharringan
//	Add(3,30177,1,0,0,20003,1,4374,5,20030,200);//Byakugan
//	Add(3,20024,1,0,0,7090,2,7095,500,20030,5);//Robo Ear
//	Add(3,20023,1,0,0,7091,2,634,300,20030,5);//Hollow Mask
//	Add(3,20040,1,0,0,7086,5,975,10,7095,200,20030,7);//Tobi Mask

	
	
	Add(4,1720,1,300000000,0,20004,1,20002,1,20005,1,1722,1,978,15,7293,10,7291,10,4123,3,4135,3);//Icarus Bow
	Add(4,1634,1,300000000,0,20004,1,20002,1,20005,1,1608,1,980,15,7292,10,7297,10,4134,3,4132,3);////Icarus Staff
	Add(4,1137,1,300000000,0,20004,1,20002,1,20005,1,1125,1,982,15,7295,10,7294,10,4137,3,4144,3);////Icarus Sword
	Add(4,13107,1,300000000,0,20004,1,20002,1,20005,1,13104,3,7095,200,4004,50,4033,50,4001,50,7296,5,4403,1);////Icarus GUN
	Add(4,13031,1,50000000,0,20012,1,999,350,969,250,7297,30,714,25);//Swordbreaker
	Add(4,1225,1,50000000,0,20011,1,999,350,969,250,7292,30,714,25);////Mailbreaker
	Add(4,13032,1,50000000,0,20013,1,999,350,969,250,7296,30,714,25);////Skewer
	Add(4,1530,1,300000000,0,20001,1,20005,1,5113,1,1508,1,7289,15,7290,15,4246,10,4305,5);////Fist of Fury
//	Add(4,1161,1,0,0,7079,3,7089,3,7088,3,1135,1,1133,1,1141,1,1136,1);////Balmung
//	Add(4,1533,1,0,0,1161,1,13020,1,20005,1,7837,4,7090,2,7092,2,7076,2,7075,2,12114,100,12115,100,12116,100,12117,100);////Warrior's Balmung
	
	Add(5,30238,1,100000000,0,2771,2,969,250,1030,10,4374,10);//STR
	Add(5,30239,1,100000000,0,2770,2,969,250,7211,10,4263,10);//AGI
	Add(5,30240,1,100000000,0,2766,2,969,250,7108,10,4143,10);//VIT
	Add(5,30241,1,100000000,0,2768,2,969,250,7020,10,4330,10);//INT
	Add(5,30242,1,100000000,0,2769,2,969,250,7018,10,4121,10);//DEX
	Add(5,30243,1,100000000,0,2767,2,969,250,968,10,4131,100);//LUK

	Add(6,20042,1,0,0,20010,1,20046,1,4067,5,4105,5,7090,2,7077,2,7444,100,20030,100);//F Armor
	Add(6,20043,1,0,0,20009,1,20047,1,7086,2,7089,2,7444,100,7035,25,20030,100);////F Manteau
	Add(6,20044,1,0,0,20008,1,20048,1,7088,2,7078,2,7451,25,7444,100,20030,100);////F Shield
	Add(6,20045,1,0,0,20006,1,20049,1,7092,2,7083,2,7450,10,7444,100,20030,100);////F Shoes
// -----------------------------------------------------------

	freeloop(0);
	set .menu$,"";
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1) {
		set .menu$, .menu$+.Shops$[.@i]+":";
		npcshopdelitem "qshop"+.@i,909;
	}
	end;

OnMenu:
	set .@size, getarraysize(@i);
	if (!.@size) set .@i, select(.menu$);
	else if (.@size == 1) set .@i, @i[0];
	else {
		for(set .@j,0; .@j<.@size; set .@j,.@j+1)
			set .@menu$, .@menu$+.Shops$[@i[.@j]]+":";
		set .@i, @i[select(.@menu$)-1];
	}
	deletearray @i[0],getarraysize(@i);
	if (.Shops$[.@i] == "") {
		message strcharinfo(0),"An error has occurred.";
		end;
	}
	dispbottom "Select one item at a time.";
	callshop "qshop"+.@i,1;
	npcshopattach "qshop"+.@i;
	end;

OnBuyItem:
	// .@q[] : RewardID, BoughtAmt, RewardAmt, BaseAmt, ReqZeny, ReqPts, { ReqItem, ReqAmt, ... }
	setarray .@q[0],@bought_nameid[0],((@bought_quantity[0] > .MaxStack)?.MaxStack:@bought_quantity[0]);
	copyarray .@q[3],getd(".q_"+.@q[0]+"[0]"),getarraysize(getd(".q_"+.@q[0]));
	set .@q[2],.@q[1]*.@q[3];
	if (!.@q[2] || .@q[2] > 30000) {
		message strcharinfo(0),"You can't purchase that many "+getitemname(.@q[0])+".";
		end;
	}
	mes "[Quest Shop]";
	mes "Reward: ^0055FF"+((.@q[2] > 1)?.@q[2]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	disable_items;
	if (.@q[4]) mes " > "+Chk(Zeny,.@q[4]*.@q[1])+(.@q[4]*.@q[1])+" Zeny^000000";
	if (.@q[5]) mes " > "+Chk(getd(.Points$[0]),.@q[5]*.@q[1])+(.@q[5]*.@q[1])+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+(.@q[5]*.@q[1])+")^000000";
	if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1]*.@q[1])+((.ShowID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+(.@q[.@i+1]*.@q[1])+")^000000";
	next;
	setarray @qe[1], getiteminfo(.@q[0],5), getiteminfo(.@q[0],11);
	if (@qe[2] > 0 && ((@qe[1] & 1) || (@qe[1] & 256) || (@qe[1] & 512) || (@qe[1] & 1024) || (@qe[1] & 2048) || (@qe[1] & 4096) || (@qe[1] & 4) || (@qe[1] & 8192)))
		set .@preview,1;
	addtimer 1000, strnpcinfo(0)+"::OnEnd";
	while(1) {
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000:"+((.@preview && !@qe[7])?" ~ Preview...":"")+": ~ ^777777Cancel^000000")) {
		case 1:
			if (@qe[0]) { 
				mes "[Quest Shop]";
				mes "You're missing one or more quest requirements.";
				close;
			}
			if (!checkweight(.@q[0],.@q[2])) {
				mes "[Quest Shop]";
				mes "^FF0000You need "+(((.@q[2]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
				close;
			}
			if (.@q[4]) set Zeny, Zeny-(.@q[4]*.@q[1]);
			if (.@q[5]) setd .Points$[0], getd(.Points$[0])-(.@q[5]*.@q[1]);
			if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
				delitem .@q[.@i],.@q[.@i+1]*.@q[1];
			getitem .@q[0],.@q[2];
			if (.Announce) announce strcharinfo(0)+" has created "+((.@q[2] > 1)?.@q[2]+"x "+getitemname(.@q[0]):A_An(getitemname(.@q[0])))+"!",0;
			specialeffect2 EF_FLOWERLEAF;
			close;
		case 2:
			setarray @qe[3], getlook(LOOK_HEAD_BOTTOM), getlook(LOOK_HEAD_TOP), getlook(LOOK_HEAD_MID), getlook(LOOK_ROBE), 1;
			if ((@qe[1] & 1) || (@qe[1] & 4096)) changelook LOOK_HEAD_BOTTOM, @qe[2];
			else if ((@qe[1] & 256) || (@qe[1] & 1024)) changelook LOOK_HEAD_TOP, @qe[2];
			else if ((@qe[1] & 512) || (@qe[1] & 2048)) changelook LOOK_HEAD_MID, @qe[2];
			else if ((@qe[1] & 4) || (@qe[1] & 8192)) changelook LOOK_ROBE, @qe[2];
			break;
		case 3:
			close;
		}
	}

OnEnd:
	if (@qe[7]) {
		changelook LOOK_HEAD_BOTTOM, @qe[3];
		changelook LOOK_HEAD_TOP, @qe[4];
		changelook LOOK_HEAD_MID, @qe[5];
		changelook LOOK_ROBE, @qe[6];
	}
	deletearray @qe[0],8;
	end;
	
function Add {
	if (getitemname(getarg(1)) == "null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped).";
		return;
	}
	setarray .@j[0],getarg(2),getarg(3),getarg(4);
	for(set .@i,5; .@i<getargcount(); set .@i,.@i+2) {
		if (getitemname(getarg(.@i)) == "null") {
			debugmes "Quest requirement #"+getarg(.@i)+" invalid (skipped).";
			return;
		} else
			setarray .@j[.@i-2],getarg(.@i),getarg(.@i+1);
	}
	copyarray getd(".q_"+getarg(1)+"[0]"),.@j[0],getarraysize(.@j);
	npcshopadditem "qshop"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return;
}

function Chk {
	if (getarg(0) < getarg(1)) {
		set @qe[0],1;
		return "^FF0000";
	} else
		return "^00FF00";
}

function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot) {
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),2) == 4 || getiteminfo(getarg(0),2) == 5) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$;
	}
}

function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0);
}
}

function	script	qshop	{
	deletearray @i[0],getarraysize(@i);
	for(set .@i,0; .@i<getargcount(); set .@i,.@i+1)
		set @i[.@i],getarg(.@i);
	doevent "quest_shop::OnMenu";
	end;
	
}


// Dummy shop data -- copy as needed.
//============================================================
-	shop	qshop	FAKE_NPC,909:-1
-	shop	qshop1	FAKE_NPC,909:-1
-	shop	qshop2	FAKE_NPC,909:-1
-	shop	qshop3	FAKE_NPC,909:-1
-	shop	qshop4	FAKE_NPC,909:-1
-	shop	qshop5	FAKE_NPC,909:-1
-	shop	qshop6	FAKE_NPC,909:-1